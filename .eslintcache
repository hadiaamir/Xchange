[{"/Users/hadiaamir/Coding/Xchange/src/App.js":"1","/Users/hadiaamir/Coding/Xchange/src/components/Currency.jsx":"2","/Users/hadiaamir/Coding/Xchange/src/components/Login.jsx":"3","/Users/hadiaamir/Coding/Xchange/src/reportWebVitals.js":"4","/Users/hadiaamir/Coding/Xchange/src/components/Signup.jsx":"5","/Users/hadiaamir/Coding/Xchange/src/components/Main.jsx":"6","/Users/hadiaamir/Coding/Xchange/src/utils/http.js":"7","/Users/hadiaamir/Coding/Xchange/src/utils/environment.js":"8","/Users/hadiaamir/Coding/Xchange/src/actions/profileActions.js":"9","/Users/hadiaamir/Coding/Xchange/src/actions/types.js":"10","/Users/hadiaamir/Coding/Xchange/src/utils/store.js":"11","/Users/hadiaamir/Coding/Xchange/src/reducers/index.js":"12","/Users/hadiaamir/Coding/Xchange/src/index.js":"13","/Users/hadiaamir/Coding/Xchange/src/reducers/errorReducer.js":"14","/Users/hadiaamir/Coding/Xchange/src/components/PrivateRoute.jsx":"15","/Users/hadiaamir/Coding/Xchange/src/reducers/authReducer.js":"16","/Users/hadiaamir/Coding/Xchange/src/actions/authActions.js":"17","/Users/hadiaamir/Coding/Xchange/src/reducers/profileReducer.js":"18"},{"size":1659,"mtime":1608106965728,"results":"19","hashOfConfig":"20"},{"size":7159,"mtime":1608148375055,"results":"21","hashOfConfig":"20"},{"size":2352,"mtime":1608111752784,"results":"22","hashOfConfig":"20"},{"size":362,"mtime":1608039888540,"results":"23","hashOfConfig":"20"},{"size":2913,"mtime":1608201449192,"results":"24","hashOfConfig":"20"},{"size":707,"mtime":1608107021946,"results":"25","hashOfConfig":"20"},{"size":887,"mtime":1608102689958,"results":"26","hashOfConfig":"20"},{"size":693,"mtime":1608104136808,"results":"27","hashOfConfig":"20"},{"size":4759,"mtime":1608102961459,"results":"28","hashOfConfig":"20"},{"size":344,"mtime":1608101864854,"results":"29","hashOfConfig":"20"},{"size":401,"mtime":1608103291405,"results":"30","hashOfConfig":"20"},{"size":283,"mtime":1608103194901,"results":"31","hashOfConfig":"20"},{"size":500,"mtime":1608039888539,"results":"32","hashOfConfig":"20"},{"size":251,"mtime":1608103194899,"results":"33","hashOfConfig":"20"},{"size":556,"mtime":1608103446733,"results":"34","hashOfConfig":"20"},{"size":347,"mtime":1608103194892,"results":"35","hashOfConfig":"20"},{"size":1509,"mtime":1608102962376,"results":"36","hashOfConfig":"20"},{"size":769,"mtime":1608103194909,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"aj2904",{"filePath":"40","messages":"41","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},"/Users/hadiaamir/Coding/Xchange/src/App.js",["84","85"],"/Users/hadiaamir/Coding/Xchange/src/components/Currency.jsx",["86","87","88","89","90","91","92","93","94","95"],"\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport http from '../utils/http';\nimport './Currency.scss';\n\nimport axios from 'axios';\n\nimport tinyLogo from './images/tinyLogo.svg';\nimport exchangeArrows from './images/xchangearrow.svg';\nimport logoutIcon from './images/logoutIcon.svg'\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../actions/profileActions';\nimport { logoutUser } from '../actions/authActions';\n\nimport CurrencyFlag from 'react-currency-flags';\nimport useForm from '../hooks/useForm';\nimport CURRENCY_CODES from './CurrencyCodes.json';\nimport environment from '../utils/environment'\n\nimport config from '../config.json';\n\n\n\nfunction Currency(props) {\n\n  const { profile: profileState } = props;\n\n  const { profile, loading } = profileState;\n\n  useEffect(() => {\n    \n    if (profile) {\n      console.log(profile)\n    }\n  }, [profile]);\n\n\n  const logout = () => {\n    props.logoutUser();\n  };\n\n\n  const [exchange, setExchangeInfo] = useState(\"\");\n\n\n  const [exchangeLoading, setExchangeLoading] = useState(false);\n\n  \n\n  const onSubmit = async (inputs) => {\n    try {\n      setExchangeLoading(true);\n\n      console.log(inputs)\n      const exchangeInfo = { \n        amount: inputs.amount,\n        origin: selectValue,\n        exchanger: selectExchangeValue\n      };\n      \n      const response = await http.post(`${environment.resolveApi().rest}/exchange/rate/`, exchangeInfo);\n\n      setExchangeInfo(response.data);\n      \n      // setExchangeRateInfo(exchangeRateResponse)\n\n      // console.log(exchangeRateResponse);\n\n      // let groupedCurrencyCode = 'USD' + selectValue;\n      // const convertedVal = getConvertedValue(inputs.amount, exchangeRateResponse.quotes[groupedCurrencyCode])\n      // console.log(convertedVal)\n\n    } catch (error) {\n      console.log(error);\n    }\n\n    setExchangeLoading(false);\n  }\n\n\n\n  const { inputs, handleInputChange, handleSubmit } = useForm(onSubmit);\n  \n\n  const [exchangeBtnClass, setExchangeBtnClass] = useState(\"disabled\");\n  const [selectValue, setSelectValue] = useState(\"CAD\");\n  const [selectExchangeValue, setSelectExchangeValue] = useState(\"USD\");\n  const [originName, setOriginName] = useState(\"Canadian Dollar\");\n  const [exchangeName, setExchangeName] = useState(\"United States Dollar\");\n  \n\n  const handleSelectOnChange = (event) => {\n    event.persist();\n    setSelectValue(event.target.value);\n    setOriginName(CURRENCY_CODES[event.target.options.selectedIndex].Name)\n  \n  };\n\n\n  const handleSelectOnExchange = (event) => {\n    event.persist();\n    setSelectExchangeValue(event.target.value);\n\n    setExchangeName(CURRENCY_CODES[event.target.options.selectedIndex].Name)\n  }\n\n\n  const getConvertedValue = (amount, rate) => {\n      let conversion =  amount * rate;\n      return conversion;\n  }\n \n\n\nif (loading) return <div className=\"loading\"><h1>Loading...</h1></div>;\n  if (!profile) {\n  return (\n    <div className=\"Currency\">\n        <div className=\"navbar\">\n            <img src={tinyLogo} />\n           \n            <button className=\"logout-btn\" onClick={logout}>\n              <img src={logoutIcon} />\n            </button>\n        </div>\n\n\n    <div className=\"currency-outer-form\">\n\n\n      <form onSubmit={handleSubmit}>\n\n\n          <div className=\"currency-form\">\n\n          \n         \n        <div className=\"currency-amt-form\">\n        <div className=\"currency-result-inner-form\"> \n            <div className=\"currency-form-input-wrapper\">\n              <span className=\"currency-form-subheading\">You Have</span>\n              <input type=\"text\" name=\"amount\" value={inputs.amount} onChange={handleInputChange} className=\"currency-input currency-amt-input\"></input>\n            </div>\n\n            <div className=\"currency-form-input-wrapper currency-type-wrapper\">\n            <small className=\"currency-form-smallheading\">{originName}</small>\n              <select value={selectValue} className=\"currency-input currency-type-input\" onChange={handleSelectOnChange}>\n                {CURRENCY_CODES.map((currency, index) => (\n                    <option key={index} value={currency.Code}>\n                      {currency.Code}\n                    </option>  \n                )\n                )\n                }\n              </select>\n              <CurrencyFlag currency={selectValue} width={38} />\n            </div>\n            </div>\n            { exchange && selectValue !== 'USD' ?\n              <span className=\"currency-form-smallheading-rate\"><strong>Rate:</strong> {exchange.originRate} <small className=\"api-companyname\">by {exchange.lowestRateApi}</small></span>\n              :\n              ''\n            }\n\n        </div>\n\n            {/* <img className=\"exchangeArrowsIcon\" src={exchangeArrows} /> */}\n        \n        <div className=\"currency-result-form\">\n            <div className=\"currency-result-inner-form\">\n              <div className=\"currency-form-input-wrapper\">\n                <span className=\"currency-form-subheading\">You Get</span>\n                <input type=\"text\" value={exchange.roundedConversion} className=\"currency-input currency-amt-input\" disabled></input>\n              </div>\n\n              <div className=\"currency-form-input-wrapper currency-type-wrapper\">\n                <small className=\"currency-form-smallheading\">{exchangeName}</small>\n                <select value={selectExchangeValue} className=\"currency-input currency-type-input\" onChange={handleSelectOnExchange}>\n                  {CURRENCY_CODES.map((currency, index) => (\n                      <option key={index} value={currency.Code}>\n                        {currency.Code}\n                      </option>  \n                  )\n                  )\n                  }\n                </select>\n                \n                <CurrencyFlag currency={selectExchangeValue} width={38} />\n              </div>\n\n            </div>\n            { exchange ?\n              <span className=\"currency-form-smallheading-rate\"><strong>Rate:</strong> {exchange.lowestExchangeRate} <small className=\"api-companyname\">by {exchange.lowestRateApi}</small></span>\n              :\n              ''\n            }\n            \n        </div>\n        \n\n\n        </div>\n\n       { inputs.amount && inputs.amount.length > 0 ?\n        <button type=\"submit\" className=\"get-rate-btn\">{exchangeLoading ? 'Calculating...' : 'Convert'}</button>\n       :\n        <button type=\"button\" className=\"is-not-active\" disabled>Convert</button>\n       } \n\n            \n            \n            \n\n\n        </form>\n   \n\n\n        {/* <div className=\"currency-extra-info-wrapper\">\n            <small className=\"rates-refresh-time\">Rates will be refreshed in 30 seconds</small>\n            <small className=\"rates-refresh-time\">1CAD = 0.89USD</small>\n        </div> */}\n        \n\n      </div>\n       \n\n\n    </div>\n  );\n  }\n}\n\nCurrency.propTypes = {\n  profile: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, logoutUser })(Currency);\n\n\n",["96","97"],"/Users/hadiaamir/Coding/Xchange/src/components/Login.jsx",["98","99"],"\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport http from '../utils/http';\nimport useForm from '../hooks/useForm';\n\nimport './Login.scss';\nimport bigLogo from './images/bigLogo.svg';\n\nimport environment from '../utils/environment';\nimport { withAlert } from \"react-alert\";\n\n\n\n\nfunction Login(props) {\n\n\n  const { auth, history } = props;\n\n\n  const onSubmit = async (inputs) => {\n    \n \n    if (!inputs.email || inputs.email.length === 0 || !inputs.password || inputs.password.length === 0) {\n      props.alert.error(\"Please enter your email and password.\");\n      return console.error('missing message');\n    }\n\n    const userData = { \n      email: inputs.email,\n      password: inputs.password \n    };\n    \n    try {\n      await http.post(`${environment.resolveApi().rest}/user/login`, userData);\n      props.history.push(\"/\");\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n      props.alert.error(\"Email or Password does not exist!\");\n    }\n  };\n\n\n  const { inputs, handleInputChange, handleSubmit } = useForm(onSubmit);\n  \n  \n  \n  useEffect(() => {\n    \n    if (auth.isAuthenticated) {\n      history.push('/');\n    }\n  }, [auth, history]);\n\n\n\n  return (\n    <div className=\"Login\">\n        <img src={bigLogo} />\n        <h1>Calculate live currency fast & easy </h1>\n\n        <form onSubmit={handleSubmit}  className=\"outer-form\">\n            <span className=\"form-subheading\">Please enter your email & password.</span>\n            <input value={inputs.email}  onChange={handleInputChange} name=\"email\" type=\"email\" placeholder=\"Email\" className=\"form-input\"></input>\n            <input value={inputs.password}  onChange={handleInputChange} name=\"password\" type=\"password\"   placeholder=\"Password\" className=\"form-input\"></input>\n            \n            <button type=\"submit\" className=\"form-btn\">Login</button>\n            <a href=\"/signup\" className=\"form-link\">Don’t have an account? Click here.</a>\n        </form>\n    </div>\n  );\n}\n\n\nLogin.propTypes = {\n \n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(withAlert()(Login));\n\n","/Users/hadiaamir/Coding/Xchange/src/reportWebVitals.js",[],["100","101"],"/Users/hadiaamir/Coding/Xchange/src/components/Signup.jsx",["102"],"/Users/hadiaamir/Coding/Xchange/src/components/Main.jsx",[],"/Users/hadiaamir/Coding/Xchange/src/utils/http.js",[],["103","104"],"/Users/hadiaamir/Coding/Xchange/src/utils/environment.js",[],["105","106"],"/Users/hadiaamir/Coding/Xchange/src/actions/profileActions.js",[],"/Users/hadiaamir/Coding/Xchange/src/actions/types.js",[],["107","108"],"/Users/hadiaamir/Coding/Xchange/src/utils/store.js",[],"/Users/hadiaamir/Coding/Xchange/src/reducers/index.js",[],"/Users/hadiaamir/Coding/Xchange/src/index.js",[],"/Users/hadiaamir/Coding/Xchange/src/reducers/errorReducer.js",["109"],"import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload || {};\n    default:\n      return state;\n  }\n}\n","/Users/hadiaamir/Coding/Xchange/src/components/PrivateRoute.jsx",[],"/Users/hadiaamir/Coding/Xchange/src/reducers/authReducer.js",["110"],"import { SET_CURRENT_USER } from '../actions/types';\n\nconst initialState = {\n  isAuthenticated: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: Boolean(action.payload),\n      };\n    default:\n      return state;\n  }\n}\n","/Users/hadiaamir/Coding/Xchange/src/actions/authActions.js",[],"/Users/hadiaamir/Coding/Xchange/src/reducers/profileReducer.js",["111"],"import {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_LOADING,\n  CLEAR_CURRENT_PROFILE,\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: null,\n  loading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case PROFILE_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n        loading: false,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: action.payload,\n        loading: false,\n      };\n    case CLEAR_CURRENT_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n",{"ruleId":"112","severity":1,"message":"113","line":1,"column":38,"nodeType":"114","messageId":"115","endLine":1,"endColumn":49},{"ruleId":"112","severity":1,"message":"116","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":12},{"ruleId":"112","severity":1,"message":"113","line":2,"column":38,"nodeType":"114","messageId":"115","endLine":2,"endColumn":49},{"ruleId":"112","severity":1,"message":"117","line":2,"column":51,"nodeType":"114","messageId":"115","endLine":2,"endColumn":57},{"ruleId":"112","severity":1,"message":"118","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":13},{"ruleId":"112","severity":1,"message":"119","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":22},{"ruleId":"112","severity":1,"message":"120","line":22,"column":8,"nodeType":"114","messageId":"115","endLine":22,"endColumn":14},{"ruleId":"112","severity":1,"message":"121","line":87,"column":10,"nodeType":"114","messageId":"115","endLine":87,"endColumn":26},{"ruleId":"112","severity":1,"message":"122","line":87,"column":28,"nodeType":"114","messageId":"115","endLine":87,"endColumn":47},{"ruleId":"112","severity":1,"message":"123","line":110,"column":9,"nodeType":"114","messageId":"115","endLine":110,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":122,"column":13,"nodeType":"126","endLine":122,"endColumn":35},{"ruleId":"124","severity":1,"message":"125","line":125,"column":15,"nodeType":"126","endLine":125,"endColumn":39},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"112","severity":1,"message":"131","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":20},{"ruleId":"124","severity":1,"message":"125","line":64,"column":9,"nodeType":"126","endLine":64,"endColumn":30},{"ruleId":"127","replacedBy":"132"},{"ruleId":"129","replacedBy":"133"},{"ruleId":"124","severity":1,"message":"125","line":75,"column":5,"nodeType":"126","endLine":75,"endColumn":26},{"ruleId":"127","replacedBy":"134"},{"ruleId":"129","replacedBy":"135"},{"ruleId":"127","replacedBy":"136"},{"ruleId":"129","replacedBy":"137"},{"ruleId":"127","replacedBy":"138"},{"ruleId":"129","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":5,"column":1,"nodeType":"142","endLine":12,"endColumn":2},{"ruleId":"140","severity":1,"message":"141","line":7,"column":1,"nodeType":"142","endLine":17,"endColumn":2},{"ruleId":"140","severity":1,"message":"141","line":14,"column":1,"nodeType":"142","endLine":42,"endColumn":2},"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'useRef' is defined but never used.","'axios' is defined but never used.","'exchangeArrows' is defined but never used.","'config' is defined but never used.","'exchangeBtnClass' is assigned a value but never used.","'setExchangeBtnClass' is assigned a value but never used.","'getConvertedValue' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'withRouter' is defined but never used.",["143"],["144"],["143"],["144"],["143"],["144"],["143"],["144"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]